/**
 * This module was automatically generated by `ts-interface-builder`
 */
import * as t from "ts-interface-checker";
// tslint:disable:object-literal-key-quotes

export const LocalConfigure = t.iface([], {
  "theme": t.iface([], {
    "bgType": t.union(t.lit("none"), t.lit("gradient"), t.lit("picture")),
    "bgGradient": "string",
    "bgPicture": "string",
  }),
  "data": t.iface([], {
    "type": t.union(t.lit("Local"), t.lit("Remote")),
    "data": "string",
  }),
});

export const PageConfigure = t.iface([], {
  "id": "string",
  "author": "string",
  "lastModify": "number",
  "license": "string",
  "pages": t.iface([], {
    [t.indexKey]: "SubPage",
  }),
});

export const SubPage = t.iface([], {
  "id": "number",
  "name": "string",
  "character": "string",
  "entries": t.array("Entry"),
});

export const Entry = t.iface([], {
  "id": "number",
  "name": "string",
  "img": "string",
  "href": "string",
  "menu": t.array("MenuEntry"),
});

export const MenuEntry = t.iface([], {
  "type": t.union(t.lit("Divider"), t.lit("Entry")),
  "name": t.opt("string"),
  "href": t.opt("string"),
});

export const ApplicationState = t.iface([], {
  "pageConfigure": "PageConfigure",
  "ptrPage": "string",
});

const exportedTypeSuite: t.ITypeSuite = {
  LocalConfigure,
  PageConfigure,
  SubPage,
  Entry,
  MenuEntry,
  ApplicationState,
};
export default exportedTypeSuite;
